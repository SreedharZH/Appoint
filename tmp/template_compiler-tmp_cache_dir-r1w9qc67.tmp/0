export default Ember.HTMLBars.template((function() {
  return {
    meta: {
      "revision": "Ember@1.13.7",
      "loc": {
        "source": null,
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 0
        }
      },
      "moduleName": "zohobooking/templates/addbooking.hbs"
    },
    arity: 0,
    cachedFragment: null,
    hasRendered: false,
    buildFragment: function buildFragment(dom) {
      var el0 = dom.createDocumentFragment();
      var el1 = dom.createElement("form");
      dom.setAttribute(el1,"id","Booking");
      var el2 = dom.createTextNode("\n");
      dom.appendChild(el1, el2);
      var el2 = dom.createComment("");
      dom.appendChild(el1, el2);
      var el2 = dom.createTextNode("\n");
      dom.appendChild(el1, el2);
      var el2 = dom.createComment("");
      dom.appendChild(el1, el2);
      var el2 = dom.createTextNode("\n");
      dom.appendChild(el1, el2);
      var el2 = dom.createComment("");
      dom.appendChild(el1, el2);
      var el2 = dom.createTextNode("\n");
      dom.appendChild(el1, el2);
      dom.appendChild(el0, el1);
      var el1 = dom.createTextNode("	\n");
      dom.appendChild(el0, el1);
      var el1 = dom.createComment("");
      dom.appendChild(el0, el1);
      var el1 = dom.createTextNode("\n\n\n");
      dom.appendChild(el0, el1);
      var el1 = dom.createComment("");
      dom.appendChild(el0, el1);
      var el1 = dom.createTextNode("\n");
      dom.appendChild(el0, el1);
      return el0;
    },
    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
      var element0 = dom.childAt(fragment, [0]);
      var morphs = new Array(6);
      morphs[0] = dom.createElementMorph(element0);
      morphs[1] = dom.createMorphAt(element0,1,1);
      morphs[2] = dom.createMorphAt(element0,3,3);
      morphs[3] = dom.createMorphAt(element0,5,5);
      morphs[4] = dom.createMorphAt(fragment,2,2,contextualElement);
      morphs[5] = dom.createMorphAt(fragment,4,4,contextualElement);
      return morphs;
    },
    statements: [
      ["element","action",["add"],["on","submit"],["loc",[null,[1,19],[1,47]]]],
      ["inline","input",[],["placeholder","Name","value",["subexpr","@mut",[["get","Name",["loc",[null,[2,33],[2,37]]]]],[],[]]],["loc",[null,[2,0],[2,39]]]],
      ["inline","input",[],["placeholder","Service","value",["subexpr","@mut",[["get","Service",["loc",[null,[3,36],[3,43]]]]],[],[]]],["loc",[null,[3,0],[3,45]]]],
      ["inline","input",[],["type","submit","value","Add Location"],["loc",[null,[4,0],[4,44]]]],
      ["content","outlet",["loc",[null,[6,0],[6,10]]]],
      ["content","outlet",["loc",[null,[9,0],[9,10]]]]
    ],
    locals: [],
    templates: []
  };
}()));
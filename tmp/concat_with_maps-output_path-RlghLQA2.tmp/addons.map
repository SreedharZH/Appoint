{"version":3,"sources":["ember-cli-app-version/components/app-version.js","ember-cli-app-version/initializer-factory.js","ember-cli-app-version/templates/app-version.js","ember-cli-app-version.js","zservice/adapters/application.js","zservice/initializers/request-server.js","zservice/initializers/service-functions.js","zservice/serializers/application.js","zservice/services/request-server.js","zservice/services/service-functions.js","zservice.js"],"sourcesContent":["define('ember-cli-app-version/components/app-version', ['exports', 'ember', 'ember-cli-app-version/templates/app-version'], function (exports, Ember, layout) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'span',\n    layout: layout['default']\n  });\n\n});","define('ember-cli-app-version/initializer-factory', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n\n\n  exports['default'] = initializerFactory;\n  var classify = Ember['default'].String.classify;\n\n  function initializerFactory(name, version) {\n    var registered = false;\n\n    return function () {\n      if (!registered && name && version) {\n        var appName = classify(name);\n        Ember['default'].libraries.register(appName, version);\n        registered = true;\n      }\n    };\n  }\n\n});","define('ember-cli-app-version/templates/app-version', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"modules/ember-cli-app-version/templates/app-version.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"version\",[\"loc\",[null,[1,0],[1,11]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('ember-cli-app-version', ['ember-cli-app-version/index', 'ember', 'exports'], function(__index__, __Ember__, __exports__) {\n  'use strict';\n  var keys = Object.keys || __Ember__['default'].keys;\n  var forEach = Array.prototype.forEach && function(array, cb) {\n    array.forEach(cb);\n  } || __Ember__['default'].EnumerableUtils.forEach;\n\n  forEach(keys(__index__), (function(key) {\n    __exports__[key] = __index__[key];\n  }));\n});\n","define('zservice/adapters/application', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n\t'use strict';\n\n\t/* $Id$ */\n\n\tvar adapter = DS['default'].RESTAdapter.extend({\n\t\tdefaultSerializer: '-zservice', // No I18N\n\n\t\tinit: function init() {\n\t\t\tthis._super();\n\t\t\tthis.set('headers', { // No I18N\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded' // No I18N\n\t\t\t});\n\t\t},\n\n\t\tnamespace: 'api', // No I18N\n\n\t\tprefix: window.ZCB_APP.prefix,\n\t\thost: window.ZCB_APP.serverurl,\n\t\t// authtoken : window.ZCB_APP.authtoken,\n\t\tapplicationName: window.ZCB_APP.appname,\n\t\tzc_ownername: window.ZCB_APP.appowner,\n\t\t// scope: window.ZCB_APP.zcscope,\n\n\t\taction: \"asdad\", // No I18N\n\n\t\tAJAXPOST: 'POST', // No I18N\n\t\tAJAXGET: 'GET', // No I18N\n\n\t\tgetReportName: function getReportName(formName) {\n\n\t\t\treturn formName + \"_Report\"; // No I18N\n\t\t},\n\n\t\tgetRecordURL: function getRecordURL(ownerName, appName, formName) {\n\n\t\t\treturn ownerName + '/json/' + appName + '/form/' + formName + '/record'; // No I18N\n\t\t},\n\n\t\tpathForType: function pathForType(componentName) {\n\t\t\tif (this.action === 'add' || this.action === 'edit' || this.action === 'delete') {\n\t\t\t\t// No I18N\n\t\t\t\treturn \"json/write\"; // No I18N\n\t\t\t} else if (this.action === 'view') {\n\t\t\t\t\t// return \"mobile/xml/\"+this.applicationName+\"/view/\"+this.getReportName(componentName)+'/';\n\t\t\t\t\treturn \"/mobile/json/\" + this.applicationName + \"/view/\" + this.getReportName(componentName) + \"/\"; // No I18N\n\t\t\t\t}\n\t\t},\n\n\t\tcreateRecord: function createRecord(store, type, snapshot) {\n\n\t\t\tvar adapter = this;\n\t\t\tadapter.action = \"add\"; // No I18N\n\t\t\tvar data = {};\n\t\t\tvar serializer = store.serializerFor(type.modelName);\n\n\t\t\t//Capitalize Model Name  - Form name in API call\n\n\t\t\tvar url = adapter.buildURL(adapter.getServerTypeName(type), null, snapshot, \"createRecord\"); // No I18N\n\t\t\tserializer.serializeIntoHash(data, type, snapshot, {\n\t\t\t\tincludeId: true\n\t\t\t});\n\n\t\t\tvar XMLString = adapter.generateXMLStringFormTags(type, 'add', data); // No I18N\n\t\t\tdata = {};\n\t\t\tdata.XMLString = XMLString;\n\t\t\tvar url = adapter.buildURL(type.modelName, null, snapshot, \"createRecord\"); // No I18N\n\t\t\tdelete data.Email;\n\t\t\treturn adapter.requestServer.sendAjax(url, data, adapter.AJAXPOST, adapter.action);\n\t\t},\n\n\t\tdeleteRecord: function deleteRecord(store, type, snapshot) {\n\n\t\t\tvar adapter = this;\n\t\t\tadapter.action = \"delete\";\n\t\t\tvar data = { criteria: \"ID=\" + snapshot.id }; // No I18N\n\t\t\tvar serializer = store.serializerFor(type.modelName);\n\t\t\tvar url = adapter.buildURL(adapter.getServerTypeName(type), null, snapshot, \"deleteRecord\"); // No I18N\n\t\t\tvar recordId = snapshot.id;\n\n\t\t\tvar XMLString = adapter.generateXMLStringViewTags(type, 'delete', data, recordId); // No I18N\n\t\t\tdata = {};\n\t\t\tdata.XMLString = XMLString;\n\t\t\tvar url = adapter.buildURL(type.modelName, null, snapshot, \"createRecord\"); // No I18N\n\t\t\tdelete data.Email;\n\t\t\treturn adapter.requestServer.sendAjax(url, data, adapter.AJAXPOST, adapter.action);\n\t\t},\n\n\t\tfindAll: function findAll(store, type, record) {\n\n\t\t\tvar adapter = this;\n\t\t\tadapter.action = \"view\"; // No I18N\n\t\t\tvar data = {};\n\n\t\t\tvar url = adapter.buildURL(adapter.getServerTypeName(type), null, null, \"findAll\"); // No I18N\n\t\t\treturn adapter.requestServer.sendAjax(url, data, adapter.AJAXGET, adapter.action);\n\t\t},\n\n\t\tquery: function query(store, type, _query) {\n\n\t\t\tvar adapter = this;\n\t\t\tadapter.action = \"view\";\n\t\t\tvar data = {};\n\n\t\t\tvar serializer = store.serializerFor(type.modelName);\n\t\t\tvar url = adapter.buildURL(adapter.getServerTypeName(type), null, null, _query, _query);\n\t\t\treturn adapter.requestServer.sendAjax(url, _query, adapter.AJAXGET, adapter.action);\n\t\t},\n\n\t\tfindRecord: function findRecord(store, type, id, record) {\n\t\t\tvar adapter = this;\n\t\t\tadapter.action = \"view\"; // No I18N\n\t\t\tvar data = {};\n\t\t\tdata.ID = id; // No I18N\n\t\t\t// var sam = adapter.get(\"store\").recordIsLoaded (type.modelName, id);\n\t\t\t// console.log(\"Store ::-\" + store);\n\t\t\t// console.log(\"type ::-\" + type);\n\t\t\t// console.log(\"id ::-\" + id);\n\t\t\t// console.log(\"record ::-\" + record);\n\t\t\tvar url = adapter.buildURL(adapter.getServerTypeName(type), null, null, \"findRecord\"); // No I18N\n\t\t\treturn adapter.requestServer.sendAjax(url, data, adapter.AJAXGET, adapter.action);\n\t\t},\n\n\t\tupdateRecord: function updateRecord(store, type, snapshot) {\n\n\t\t\tvar adapter = this;\n\t\t\tadapter.action = \"edit\"; // No I18N\n\t\t\tvar data = {};\n\t\t\tvar serializer = store.serializerFor(type.modelName);\n\n\t\t\t//Capitalize Model Name  - Form name in API call\n\t\t\tvar url = adapter.buildURL(adapter.getServerTypeName(type), null, snapshot, \"updateRecord\"); // No I18N\n\t\t\tserializer.serializeIntoHash(data, type, snapshot, {\n\t\t\t\tincludeId: false\n\t\t\t});\n\t\t\tvar recordId = snapshot.id;\n\t\t\tvar XMLString = adapter.generateXMLStringViewTags(type, 'update', data, recordId); // No I18N\n\t\t\tdata = {};\n\t\t\tdata.XMLString = XMLString;\n\t\t\tvar url = adapter.buildURL(type.modelName, null, snapshot, \"createRecord\"); // No I18N\n\t\t\tdelete data.Email;\n\t\t\treturn adapter.requestServer.sendAjax(url, data, adapter.AJAXPOST, adapter.action);\n\t\t},\n\n\t\tgenerateXMLStringFormTags: function generateXMLStringFormTags(type, action, data) {\n\t\t\tvar XMLString = \"<formlist>\"; // No I18N\n\t\t\tXMLString = XMLString + \"<form name='\" + this.getServerTypeName(type) + \"'>\"; // No I18N\n\t\t\tXMLString = XMLString + \"<\" + action + \">\"; // No I18N\n\t\t\tXMLString = XMLString + this.generateFieldTag(data);\n\t\t\tXMLString = XMLString + \"</\" + action + \"></form></formlist>\"; // No I18N\n\t\t\treturn this.generateZohoAppTag(XMLString);\n\t\t},\n\n\t\tgenerateXMLStringViewTags: function generateXMLStringViewTags(type, action, data, recordId) {\n\n\t\t\tvar XMLString = \"<viewlist>\"; // No I18N\n\t\t\tvar viewName = this.getReportName(this.getServerTypeName(type));\n\t\t\tif (action === \"delete\") {\n\t\t\t\tXMLString = XMLString + '<view name=\"' + viewName + '\">'; // No I18N\n\t\t\t\tXMLString = XMLString + \"<\" + action + \"><criteria>\"; // No I18N\n\t\t\t\tXMLString = XMLString + '<![CDATA[(ID==\"' + recordId + '\")]]>'; // No I18N\n\t\t\t\tXMLString = XMLString + \"</criteria>\"; // No I18N\n\t\t\t\tXMLString = XMLString + \"</\" + action + \"></view></viewlist>\"; // No I18N\n\t\t\t} else if (action === \"update\") {\n\t\t\t\t\tXMLString = XMLString + '<view name=\"' + viewName + '\">'; // No I18N\n\t\t\t\t\tXMLString = XMLString + \"<\" + action + \"><criteria>\"; // No I18N\n\t\t\t\t\tXMLString = XMLString + '<![CDATA[(ID==\"' + recordId + '\")]]>'; // No I18N\n\t\t\t\t\tXMLString = XMLString + \"</criteria><newvalues>\"; // No I18N\n\t\t\t\t\tXMLString = XMLString + this.generateFieldTag(data);\n\t\t\t\t\tXMLString = XMLString + \"</newvalues></\" + action + \"></view></viewlist>\"; // No I18N\n\t\t\t\t}\n\t\t\treturn this.generateZohoAppTag(XMLString);\n\t\t},\n\n\t\tgenerateZohoAppTag: function generateZohoAppTag(xmlStr) {\n\n\t\t\tvar XMLString = \"<ZohoCreator>\"; // No I18N\n\t\t\tXMLString = XMLString + \"<applicationlist>\"; // No I18N\n\t\t\tXMLString = XMLString + \"<application name='\" + this.applicationName + \"'>\"; // No I18N\n\t\t\tXMLString = XMLString + xmlStr;\n\t\t\tXMLString = XMLString + \"</application></applicationlist>\"; // No I18N\n\t\t\tXMLString = XMLString + \"</ZohoCreator>\"; // No I18N\n\t\t\treturn XMLString;\n\t\t},\n\n\t\tgenerateFieldTag: function generateFieldTag(data) {\n\t\t\tvar XMLString = \"\";\n\t\t\tfor (var key in data) {\n\t\t\t\tXMLString = XMLString + \"<field name='\" + key + \"'>\"; // No I18N\n\t\t\t\tif (data[key] instanceof Array && data[key] != [null]) {\n\t\t\t\t\tXMLString = XMLString + \"<options>\";\n\t\t\t\t\tvar temp = data[key];\n\t\t\t\t\tfor (var i = 0; i < data[key].length; i++) {\n\t\t\t\t\t\tXMLString = XMLString + \"<option><![CDATA[\" + temp[i] + \"]]></option>\"; // No I18N\n\t\t\t\t\t}\n\t\t\t\t\tXMLString = XMLString + \"</options>\";\n\t\t\t\t} else {\n\t\t\t\t\tXMLString = XMLString + \"<value><![CDATA[\" + data[key] + \"]]></value>\"; // No I18N\n\t\t\t\t}\n\t\t\t\tXMLString = XMLString + \"</field>\"; // No I18N\n\t\t\t}\n\t\t\treturn XMLString;\n\t\t},\n\n\t\tgetServerTypeName: function getServerTypeName(type) {\n\t\t\treturn Ember['default'].String.classify(type.modelName);\n\t\t},\n\n\t\thandleResponse: function handleResponse(status, headers, payload) {\n\t\t\treturn payload;\n\t\t}\n\n\t});\n\n\texports['default'] = adapter;\n\n});","define('zservice/initializers/request-server', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    application.inject('route', 'requestServer', 'service:request-server'); // No I18N\n    application.inject('controller', 'requestServer', 'service:request-server'); // No I18N\n    application.inject('adapter', 'requestServer', 'service:request-server'); // No I18N\n    application.inject('component', 'requestServer', 'service:request-server'); // No I18N\n    application.inject('service:service-functions', 'requestServer', 'service:request-server'); // No I18N\n  }\n\n  exports['default'] = {\n    name: 'request-server', // No I18N\n    initialize: initialize\n  };\n\n});","define('zservice/initializers/service-functions', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    application.inject('route', 'serviceFunctions', 'service:service-functions'); // No I18N\n    application.inject('controller', 'serviceFunctions', 'service:service-functions'); // No I18N\n    application.inject('adapter', 'serviceFunctions', 'service:service-functions'); // No I18N\n    application.inject('serializer', 'serviceFunctions', 'service:service-functions'); // No I18N\n    application.inject('component', 'serviceFunctions', 'service:service-functions'); // No I18N\n    // application.inject('service:request-server', 'serviceFunctions', 'service:service-functions');\n  }\n\n  exports['default'] = {\n    name: 'service-functions', // No I18N\n    initialize: initialize\n  };\n\n});","define('zservice/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  /* $Id$ */\n\n  exports['default'] = DS['default'].RESTSerializer.extend({\n\n    primaryKey: 'ID', // No I18N\n\n    /* \n      Remove Root Element \n       Input : { Locations : { ID : '', Name:''} }\n       Output: { ID:'',Name:''}\n    */\n    serializeIntoHash: function serializeIntoHash(hash, type, record, options) {\n      Ember.merge(hash, this.serialize(record, options));\n    },\n\n    serializeHasMany: function serializeHasMany(snapshot, json, relationship) {\n      var key = relationship.key;\n      var hasManyRecords = snapshot.get(key);\n\n      json[key] = new Array();\n      hasManyRecords.forEach(function (item, index) {\n        json[key].push(item.id);\n      });\n    },\n\n    serializeBelongsTo: function serializeBelongsTo(snapshot, json, relationship) {\n      var key = relationship.key;\n      var belongsToRecords = snapshot.get(key);\n      json[key] = belongsToRecords.id;\n    },\n\n    /** Example : Shiruarun  Shiru-arun **/\n\n    modelNameFromPayloadKey: function modelNameFromPayloadKey(payloadKey) {\n      payloadKey = payloadKey.split(\"_Report\")[0];\n      console.log(payloadKey);\n      return payloadKey;\n    },\n\n    // modelNameFromPayloadKey: function (key) {\n    //     return key;\n    //   },\n\n    /*\n       Update the Response JSON to the model after createRecord \n    */\n\n    extractCreateRecord: function extractCreateRecord(store, type, payload, id, requestType) {\n\n      var json = payload;\n      payload = {};\n      if (json) {\n\n        var obj = json['formname'][1];\n\n        if (obj['operation'][1]['status'] != 'Success') {\n\n          payload[type.modelName] = obj['operation'][1]['values'];\n        } else {\n          payload[type.modelName] = obj['operation'][1]['values'];\n          payload[type.modelName][this.get('primaryKey')] = obj['operation'][1]['values']['ID'].toString();\n          store.setMetadataFor(type.modelName, obj['operation'][1]['status']);\n        }\n      }\n\n      return this.extractSave(store, type, payload, id, requestType);\n    },\n\n    normalize: function normalize(typeClass, hash, prop) {\n      if (typeof hash[\"StudentSemaster\"] === \"string\") {\n        hash[\"StudentSemaster\"] = this.strToArray(hash[\"StudentSemaster\"]);\n      }\n      this.normalizeId(hash);\n      return hash;\n    },\n\n    normalizeRelationships: function normalizeRelationships(typeClass, hash) {\n      if (this.keyForRelationship) {\n\n        typeClass.eachRelationship(function (key, relationshipMeta) {\n\n          if (relationshipMeta.kind === \"hasMany\") {\n            // No I18N\n\n            hash[key] = this.strToArray(hash[key]); // No I18N\n          }\n        });\n      }\n    },\n\n    strToArray: function strToArray(str) {\n      var temp = str.replace('[', ''); // No I18N\n      temp = temp.replace(']', ''); // No I18N\n      return temp.split(', '); // No I18N\n    }\n\n  });\n\n});","define('zservice/services/request-server', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t/* $Id$ */\n\n\tvar RequestServer = Ember['default'].Service.extend({\n\t\t// serviceFunctions : Ember.inject.service(\"service-functions\"),\n\t\tprefix: window.ZCB_APP.prefix,\n\t\thost: window.ZCB_APP.serverurl,\n\t\tauthtoken: window.ZCB_APP.authtoken,\n\t\tapplicationName: window.ZCB_APP.appname,\n\t\tzc_ownername: window.ZCB_APP.appowner,\n\t\tscope: window.ZCB_APP.zcscope,\n\n\t\tappendAuthToken: function appendAuthToken(data) {\n\t\t\t// data.authtoken = this.authtoken;\n\t\t\t// data.scope = this.scope;\n\t\t\treturn data;\n\t\t},\n\n\t\tsendAjax: function sendAjax(url, data, method, action) {\n\n\t\t\tvar service = this;\n\t\t\turl = this.prefix + \"://\" + url;\n\n\t\t\tdata.zc_ownername = this.zc_ownername;\n\t\t\tdata.zccpn = window.ZCB_APP.CSRF_TOKEN;\n\t\t\tif (action == 'view') {\n\t\t\t\tdata.raw = true;\n\t\t\t} else if (action === \"add\" || action === \"edit\" || action === \"delete\") {\n\t\t\t\tdata.zcRefValue = true;\n\t\t\t\tdata.formAccessType = 1;\n\t\t\t\tdata.errorLog = true;\n\t\t\t\tdata.isMobileApi = true;\n\t\t\t\tdata.childFormAccessType = 1;\n\t\t\t\tdata = service.appendAuthToken(data);\n\t\t\t}\n\n\t\t\treturn new Ember['default'].RSVP.Promise(function (resolve, reject) {\n\t\t\t\t$.ajax({\n\t\t\t\t\ttype: method, // No I18N\n\t\t\t\t\turl: url,\n\t\t\t\t\tdata: data,\n\t\t\t\t\tdataType: 'json' // No I18N\n\t\t\t\t}).then(function (res) {\n\t\t\t\t\t// var val = null;\n\t\t\t\t\t// for (var key in res){\n\t\t\t\t\t// \t\tval = key;\n\t\t\t\t\t// \t}\n\t\t\t\t\t// if (action === \"view\" && val === \"Student\"){\n\t\t\t\t\t// \tres = service.constructObj(res);\n\t\t\t\t\t// \tconsole.log(\"Ajax ::-\",res)\n\t\t\t\t\t// }\n\t\t\t\t\tif (action == \"add\" || action == \"delete\" || action == \"edit\") {\n\t\t\t\t\t\tvar message = { errors: { status: null, criteria: null } };\n\t\t\t\t\t\tvar temp = service.findKeyPair(res, \"status\").split(\",\"); // No I18N\n\t\t\t\t\t\tmessage.errors.status = temp[0]; // No I18N\n\t\t\t\t\t\tmessage.errors.criteria = temp[1]; //service.serviceFunctions.findKeyPair(res,\"criteria\"); // No I18N\n\t\t\t\t\t\t// var error = adapter.handleResponse(null,null,message);\n\t\t\t\t\t\t// var error = message;\n\t\t\t\t\t\t// reject(message);\n\t\t\t\t\t}\n\t\t\t\t\t// Ember.run(null, resolve, res);\n\t\t\t\t\tresolve(res);\n\t\t\t\t}, function (jqXHR) {\n\t\t\t\t\tjqXHR.then = null; // tame jQuery's ill mannered promises\n\t\t\t\t\tEmber['default'].run(null, reject, jqXHR);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\tgetStuRecord: function getStuRecord(viewLinkName) {\n\t\t\tvar self = this;\n\t\t\tvar url = self.host + \"/api/json/library-management/view/\" + viewLinkName + \"/?\"; // No I18N\n\t\t\tvar method = \"GET\"; // No I18N\n\t\t\tvar data = {};\n\t\t\tvar action = \"view\"; // No I18N\n\t\t\tvar res = self.sendAjax(url, data, method, action);\n\t\t\treturn res;\n\t\t},\n\n\t\tcallFunctionAPI: function callFunctionAPI(email, process) {\n\t\t\tvar self = this;\n\t\t\tvar url = self.host + \"/booking/\" + self.zc_ownername + \"/\" + process; // No I18N\n\t\t\tvar method = \"GET\"; // No I18N\n\t\t\tvar data = {};\n\t\t\tdata.email = email;\n\t\t\tvar action = \"function\"; // No I18N\n\t\t\tvar res = self.sendAjax(url, data, method, action);\n\t\t\treturn res;\n\t\t},\n\n\t\tfindKeyPair: function findKeyPair(payload, searchVal) {\n\t\t\tif (!payload.hasOwnProperty(searchVal)) {\n\t\t\t\tfor (var key in payload) {\n\t\t\t\t\tif (typeof payload[key] == \"object\" && payload[key]) {\n\t\t\t\t\t\treturn this.findKeyPair(payload[key], searchVal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn payload[searchVal];\n\t\t\t}\n\t\t}\n\t});\n\n\texports['default'] = RequestServer;\n\n});","define('zservice/services/service-functions', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t/* $Id$ */\n\n\tvar ServiceFunctions = Ember['default'].Service.extend({\n\t\t// requestServer : Ember.inject.service(\"request-server\"),\n\n\t\tfindKeyPair: function findKeyPair(payload, searchVal) {\n\t\t\tif (!payload.hasOwnProperty(searchVal)) {\n\t\t\t\tfor (var key in payload) {\n\t\t\t\t\tif (typeof payload[key] == \"object\" && payload[key]) {\n\t\t\t\t\t\treturn this.findKeyPair(payload[key], searchVal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn payload[searchVal];\n\t\t\t}\n\t\t},\n\n\t\tconstructStuObj: function constructStuObj(val) {\n\t\t\tvar stuRecords = [];\n\t\t\tvar stuRecordKeys = [\"Batch\", \"ID\", \"Name\", \"StudentSemaster\", \"Deparment\"]; // No I18N\n\t\t\tvar stuRecord = {};\n\t\t\tfor (var key in val) {\n\t\t\t\tval = val[key];\n\t\t\t}\n\t\t\tfor (var i = 0; i < val.length; i++) {\n\t\t\t\tvar temp = val[i];\n\t\t\t\tvar count = 0;\n\t\t\t\tfor (var stuRecordKey in temp) {\n\t\t\t\t\tstuRecord[stuRecordKeys[count]] = temp[stuRecordKey];\n\t\t\t\t\tcount = count + 1;\n\t\t\t\t}\n\t\t\t\tstuRecords.pushObject(stuRecord);\n\t\t\t}\n\t\t\treturn stuRecords;\n\t\t},\n\n\t\tgetCurrentDateTime: function getCurrentDateTime() {\n\t\t\tvar curDateTime = Date();\n\t\t\tvar curDate = \"\";\n\t\t\tvar separateValues = curDateTime.split(\" \");\n\t\t\tvar order = [2, 1, 3];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tif (i == 2) {\n\t\t\t\t\tcurDate = curDate + separateValues[order[i]];\n\t\t\t\t} else {\n\t\t\t\t\tcurDate = curDate + separateValues[order[i]] + \"-\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar curTime = curDateTime.split(\" \")[4];\n\t\t\treturn curDate + \" \" + curTime;\n\t\t},\n\n\t\tcommonFieldName: null,\n\t\tsortOrder: null,\n\n\t\tsortNativeCode: function sortNativeCode(objects) {\n\t\t\tvar self = this;\n\t\t\tvar length = objects.get(\"length\");\n\t\t\tvar objInternal = objects.get(\"content\");\n\t\t\tif (self.commonFieldName === undefined && self.sortOrder) {\n\t\t\t\tobjInternal.sort();\n\t\t\t} else if (self.commonFieldName === undefined && !self.sortOrder) {\n\t\t\t\tobjInternal.reverse();\n\t\t\t} else {\n\t\t\t\tobjInternal.sort(function (firstObj, secondObj) {\n\t\t\t\t\tvar nameA = firstObj._data[self.commonFieldName].toLowerCase(),\n\t\t\t\t\t    nameB = secondObj._data[self.commonFieldName].toLowerCase();\n\t\t\t\t\tif (nameA > nameB) {\n\t\t\t\t\t\t//sort string ascending\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tsort: function sort(inpObj, order, fieldName) {\n\t\t\tif (order === undefined) order = true;\n\n\t\t\tvar self = this;\n\t\t\tself.commonFieldName = fieldName;\n\t\t\tself.sortOrder = order;\n\t\t\tif (inpObj.then === undefined) {\n\t\t\t\tself.sortNativeCode(inpObj);\n\t\t\t} else {\n\t\t\t\tinpObj.then(function (objects) {\n\t\t\t\t\tself.sortNativeCode(objects);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t});\n\n\texports['default'] = ServiceFunctions;\n\n});","define('zservice', ['zservice/index', 'ember', 'exports'], function(__index__, __Ember__, __exports__) {\n  'use strict';\n  var keys = Object.keys || __Ember__['default'].keys;\n  var forEach = Array.prototype.forEach && function(array, cb) {\n    array.forEach(cb);\n  } || __Ember__['default'].EnumerableUtils.forEach;\n\n  forEach(keys(__index__), (function(key) {\n    __exports__[key] = __index__[key];\n  }));\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"addons.js"}